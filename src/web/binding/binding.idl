interface Cloudpilot {
    void Cloudpilot();

    VoidPtr Malloc(long size);
    void Free(VoidPtr buffer);

    boolean InitializeSession(VoidPtr buffer, long size, [Const] DOMString deviceType);

    long GetCyclesPerSecond();
    long RunEmulation(long cycles);

    [Ref] Frame CopyFrame();
    boolean IsScreenDirty();
    void MarkScreenClean();

    long MinMemoryForDevice([Const] DOMString deviceId);

    void QueuePenMove(long x, long y);
    void QueuePenUp();

    void QueueButtonDown(long id);
    void QueueButtonUp(long id);

    void QueueKeyboardEvent(long c, boolean ctrl);

    boolean IsPowerOff();
    boolean IsUIInitialized();

    void Reset();
    void ResetNoExtensions();
    void ResetHard();

    long InstallFile(VoidPtr buffer, long len);

    long GetPalette2bitMapping();

    VoidPtr GetMemoryPtr();
    VoidPtr GetDirtyPagesPtr();
    long GetMemorySize();

    VoidPtr GetRomPtr();
    long GetRomSize();

    VoidPtr GetSavestatePtr();
    long GetSavestateSize();

    boolean SaveState();
    boolean LoadState(VoidPtr buffer, long len);
};

interface RomInfo {
    void RomInfo(VoidPtr buffer, long size);

    boolean IsValid();

    long CardVersion();
    [Const] DOMString CardName();
    long RomVersion();
    [Const] DOMString RomVersionString();

    boolean Supports([Const] DOMString deviceId);
};

interface Frame {
    long GetLineWidth();
    long GetBpp();
    long GetLines();
    long GetMargin();
    long GetBytesPerLine();

    VoidPtr GetBuffer();
    long GetBufferSize();
};
